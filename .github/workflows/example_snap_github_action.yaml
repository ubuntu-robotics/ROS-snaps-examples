name: example_snap_github_action
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main
  # For manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
    steps:
    - uses: actions/checkout@v3
    - uses: snapcore/action-build@v1
      id: build-snap
      with:
        # Select the example we want to build
        path: 'shared_memory_foxy_core20/private-shared-memory'
        snapcraft-args: '--enable-experimental-extensions'

    # Make sure the snap is installable
    - run: |
        sudo snap install --dangerous ${{ steps.build-snap.outputs.snap }}
    # Do some testing with the snap
    - run: |
        ros2-shared-memory.ros2-talker-listener --print
    - uses: actions/upload-artifact@v3
      with:
        name: ros2-snap
        path: ${{ steps.build-snap.outputs.snap }}

  publish:
    # We publish the snap when a push was made on the main branch or when when add a tag
    if: github.event_name == 'push' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ros2-snap
        path: .
    # Extract and store the filename
    - run: |
        echo 'SNAP_FILE<<EOF' >> $GITHUB_ENV
        echo $(basename ${{ needs.build.outputs.snap-file }}) >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
      with:
        snap: ${{ env.SNAP_FILE }}
        # Release on candidate channel when tagged, edge otherwise
        release: ${{ startsWith(github.ref, 'refs/tags/') && 'candidate' || 'edge'}}
